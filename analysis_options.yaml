# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    ## 1. Error Prevention Rules
    avoid_print: true
    avoid_unnecessary_containers: true
    avoid_web_libraries_in_flutter: true
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true

    ## 2. Performance Rules
    prefer_const_declarations: true
    unnecessary_const: true
    unnecessary_new: true

    ## 3. Code Style Rules
    camel_case_types: true
    camel_case_extensions: true
    file_names: true
    library_names: true
    non_constant_identifier_names: true
    prefer_single_quotes: true
    slash_for_doc_comments: true

    ## 4. Flutter-Specific Rules
    use_key_in_widget_constructors: true
    prefer_const_constructors_in_immutables: true
    always_use_package_imports: true

    ## 5. Best Practices
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_returning_null_for_void: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    one_member_abstracts: true

    ## 6. Null Safety Rules
    avoid_null_checks_in_equality_operators: true
    prefer_if_null_operators: true
    prefer_null_aware_operators: true

    ## 7. Additional Useful Rules
    prefer_typing_uninitialized_variables: true
    sort_child_properties_last: true
    use_full_hex_values_for_flutter_colors: true
    use_rethrow_when_possible: true
    valid_regexps: true
